[{"/Users/pamilerinfalade/Desktop/PFS/Projects/pfs_final_project/src/index.js":"1","/Users/pamilerinfalade/Desktop/PFS/Projects/pfs_final_project/src/reportWebVitals.js":"2","/Users/pamilerinfalade/Desktop/PFS/Projects/pfs_final_project/src/App.js":"3","/Users/pamilerinfalade/Desktop/PFS/Projects/pfs_final_project/src/pages/LandingPage.js":"4","/Users/pamilerinfalade/Desktop/PFS/Projects/pfs_final_project/src/modules/accountData.js":"5","/Users/pamilerinfalade/Desktop/PFS/Projects/pfs_final_project/src/pages/CreateAccount.js":"6"},{"size":547,"mtime":1628252572474,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1628247319714,"results":"9","hashOfConfig":"8"},{"size":297,"mtime":1628463155903,"results":"10","hashOfConfig":"8"},{"size":4221,"mtime":1628343705372,"results":"11","hashOfConfig":"8"},{"size":388,"mtime":1628294721997,"results":"12","hashOfConfig":"8"},{"size":5259,"mtime":1628467439157,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18ih4k7",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/Users/pamilerinfalade/Desktop/PFS/Projects/pfs_final_project/src/index.js",[],"/Users/pamilerinfalade/Desktop/PFS/Projects/pfs_final_project/src/reportWebVitals.js",[],"/Users/pamilerinfalade/Desktop/PFS/Projects/pfs_final_project/src/App.js",["30","31"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport LandingPage from \"./pages/LandingPage\";\nimport CreateAccount from \"./pages/CreateAccount\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <LandingPage /> */}\n      <CreateAccount />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/pamilerinfalade/Desktop/PFS/Projects/pfs_final_project/src/pages/LandingPage.js",["32"],"import React, { useState } from \"react\";\nimport { Navbar, Nav, Container, Button, Modal, Form } from \"react-bootstrap\";\nimport { useFormik } from \"formik\";\nimport \"./landingPage.css\";\nimport * as Accounts from \"../modules/accountData.js\";\n\nexport default function LandingPage() {\n  const [logIn, setLogIn] = useState(false);\n\n  const hideLoginModal = () => {\n    setLogIn(false);\n  };\n  const showLoginModal = () => {\n    setLogIn(true);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\",\n    },\n    onSubmit: (values) => {\n      const account = Accounts.accountsData.find(\n        (account) => account.username === values.username\n      );\n      if (account === null) {\n        alert(\"Either username or password is incorrect\");\n      } else {\n        if (account.password === values.password) {\n          alert(`Welcome, ${account.name}`);\n        } else {\n          alert(\"Either username or password is incorrect\");\n        }\n      }\n    },\n    validate: (values) => {\n      let errors = {};\n      if (!values.username) {\n        errors.username = \"Required\";\n      }\n      if (!values.password) {\n        errors.password = \"Required\";\n      }\n\n      return errors;\n    },\n  });\n\n  return (\n    <div className=\"page\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">\n            <img\n              src=\"https://media-exp1.licdn.com/dms/image/C4D0BAQG81bcDnvsNGQ/company-logo_200_200/0/1519934768980?e=2159024400&v=beta&t=z_pYRiNIoMIaIbBXWZs7tjIBhctAXIjB26BUGXF7cUU\"\n              height=\"50px\"\n            />\n            Precise Financial Systems\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link href=\"#home\">Home</Nav.Link>\n              <Nav.Link href=\"#about\">About</Nav.Link>\n              <Nav.Link href=\"https://thepfs.biz/\">Company Website</Nav.Link>\n              <Nav.Link href=\"#findUs\">Find Us</Nav.Link>\n            </Nav>\n            <Button\n              variant=\"outline-primary\"\n              style={{ float: \"right\" }}\n              onClick={showLoginModal}\n            >\n              Login\n            </Button>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Modal\n        show={logIn}\n        onHide={hideLoginModal}\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Login</Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={formik.handleSubmit}>\n          <Modal.Body>\n            <Form.Group className=\"mb-5\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"johndoe123\"\n                name=\"username\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.username}\n              />\n              {formik.errors.username && formik.touched.username ? (\n                <div className=\"errorMessage\">{formik.errors.username}</div>\n              ) : null}\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"johndoe123\"\n                name=\"password\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.password}\n              />\n              {formik.errors.password && formik.touched.password ? (\n                <div className=\"errorMessage\">{formik.errors.password}</div>\n              ) : null}\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={hideLoginModal}>\n              Create an Account\n            </Button>\n            <Button variant=\"primary\" type=\"submit\">\n              Login\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n\n      <div className=\"content\">\n        <h1>Welcome to PFS</h1>\n      </div>\n    </div>\n  );\n}\n",["33","34"],"/Users/pamilerinfalade/Desktop/PFS/Projects/pfs_final_project/src/modules/accountData.js",[],"/Users/pamilerinfalade/Desktop/PFS/Projects/pfs_final_project/src/pages/CreateAccount.js",["35","36","37","38","39"],"import React, { useRef } from \"react\";\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Button,\n  Modal,\n  Form,\n  Card,\n} from \"react-bootstrap\";\nimport SignaturePad from \"react-signature-canvas\";\nimport \"./landingPage.css\";\nimport { accountsData } from \"../modules/accountData\";\nimport { useFormik } from \"formik\";\n\nexport default function CreateAccount() {\n  let sigPad = useRef({});\n  let signature = \"\";\n\n  function clear() {\n    sigPad.current.clear();\n  }\n\n  function save() {\n    signature = sigPad.current.toDataURL();\n  }\n\n  function show() {\n    sigPad.current.show();\n  }\n\n  const initialValues = {\n    phoneNumber: \"\",\n    fullName: \"\",\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    signature: \"\",\n  };\n\n  const onSubmit = (values) => {\n    let account = { ...values };\n    account.signature = signature;\n    let accountJSON = JSON.stringify(account);\n    accountsData.push(accountJSON);\n    console.log(\"hi\");\n  };\n\n  const validate = (values) => {\n    let errors = {};\n\n    if (!values.phoneNumber) {\n      errors.phoneNumber = \"Required!\";\n    }\n    if (!values.fullName) {\n      errors.fullName = \"Required!\";\n    }\n    if (!values.email) {\n      errors.email = \"Required!\";\n    }\n    if (!values.username) {\n      errors.username = \"Required!\";\n    }\n    if (!values.password) {\n      errors.password = \"Required!\";\n    }\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validate,\n  });\n\n  return (\n    <div className=\"formPage\">\n      <Card className=\"form\">\n        <Card.Header>\n          <h2>Create an Account</h2>\n        </Card.Header>\n        <Form onSubmit={formik.handleSubmit}>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Phone Number:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"0801 124 5678\"\n              name=\"phoneNumber\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.phoneNumber}\n            />\n            {formik.errors.phoneNumber && formik.touched.phoneNumber ? (\n              <div className=\"errorMessage\">{formik.errors.phoneNumber}</div>\n            ) : null}\n          </Form.Group>\n\n          <Form.Group className=\"mb-4\">\n            <Form.Label>Full Name:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"John Doe\"\n              name=\"fullName\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.fullName}\n            />\n            {formik.errors.fullName && formik.touched.fullName ? (\n              <div className=\"errorMessage\">{formik.errors.fullName}</div>\n            ) : null}\n          </Form.Group>\n\n          <Form.Group className=\"mb-4\">\n            <Form.Label>Email:</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"john.doe@hotmail.com\"\n              name=\"email\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n            />\n            {formik.errors.email && formik.touched.email ? (\n              <div className=\"errorMessage\">{formik.errors.email}</div>\n            ) : null}\n          </Form.Group>\n\n          <Form.Group className=\"mb-4\">\n            <Form.Label>Username:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"johnDoe1\"\n              name=\"username\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.username}\n            />\n            {formik.errors.username && formik.touched.username ? (\n              <div className=\"errorMessage\">{formik.errors.username}</div>\n            ) : null}\n          </Form.Group>\n\n          <Form.Group className=\"mb-4\">\n            <Form.Label>Password:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter desired password here\"\n              name=\"password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.password}\n            />\n            {formik.errors.password && formik.touched.password ? (\n              <div className=\"errorMessage\">{formik.errors.password}</div>\n            ) : null}\n          </Form.Group>\n\n          <div className=\"signaturePad\" style={{ border: \"solid black 1px\" }}>\n            <SignaturePad\n              className=\"m-signature-pad\"\n              ref={sigPad}\n              penColor=\"black\"\n              style={{ width: \"100%\" }}\n            />\n          </div>\n          <div className=\"signatureButtons\" style={{ padding: \"2px\" }}>\n            <Button variant=\"dark\">\n              <i className=\"fas fa-arrow-left\"></i>Back\n            </Button>\n            <Button variant=\"warning\" onClick={clear}>\n              {\" \"}\n              Clear Signature\n            </Button>\n            <Button onClick={save} variant=\"info\">\n              <i className=\"fas fa-sign-in-alt\"></i>Check in\n            </Button>\n          </div>\n          <br />\n          <Button variant=\"success\">Create Account</Button>\n        </Form>\n      </Card>\n    </div>\n  );\n}\n",{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":19},{"ruleId":"45","severity":1,"message":"46","line":54,"column":13,"nodeType":"47","endLine":57,"endColumn":15},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"40","severity":1,"message":"52","line":3,"column":3,"nodeType":"42","messageId":"43","endLine":3,"endColumn":9},{"ruleId":"40","severity":1,"message":"53","line":4,"column":3,"nodeType":"42","messageId":"43","endLine":4,"endColumn":6},{"ruleId":"40","severity":1,"message":"54","line":5,"column":3,"nodeType":"42","messageId":"43","endLine":5,"endColumn":12},{"ruleId":"40","severity":1,"message":"55","line":7,"column":3,"nodeType":"42","messageId":"43","endLine":7,"endColumn":8},{"ruleId":"40","severity":1,"message":"56","line":28,"column":12,"nodeType":"42","messageId":"43","endLine":28,"endColumn":16},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'LandingPage' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"'Navbar' is defined but never used.","'Nav' is defined but never used.","'Container' is defined but never used.","'Modal' is defined but never used.","'show' is defined but never used.","no-global-assign","no-unsafe-negation"]